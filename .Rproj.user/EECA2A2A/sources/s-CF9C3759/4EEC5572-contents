---
title: "Linear Programming"
documentclass: ctexart
output:
  rticles::ctex:
    fig_caption: yes
    number_sections: yes
    toc: yes
---

```{r, echo=FALSE, setup}
library(reticulate)
use_python("/Users/hurunqiu/anaconda3/envs/gurobi/bin/python")
```

```{python echo = FALSE}
import matplotlib.pyplot as plt
import numpy as np
plt.rcParams.update({
    "text.usetex": True,
    "font.family": "sans-serif",
    "font.sans-serif": ["STIX"],
    "text.latex.preamble": r'\usepackage{bm}'})
```

# Constraint的几何意义

每一个Constraint是一个Equation，表示为$\symbfit{a^TX=\beta}$，表示一个平面

-   $\symbfit{a^TX>\beta}$ 表示该平面上半空间（Half Space）
-   $\symbfit{a^TX>\beta}$ 表示该平面下半空间（Lower Space）
-   $\symbfit{a}$ 表示法向量，与该平面垂直，指向使得$\symbfit{a^TX}$增大的方向（$\symbfit{a^TX>\beta}$的方向，即上半空间）

因此，想要$\min \symbfit{c^TX}$，应当向着$-\symbfit{c}$的方向改变X。

如果可行域$P$完全落在某一个平面$\symbfit{-c^Tx}=\beta$对应的平面的下半平面，那么$\symbfit{c^Tx}$在$P$内的最小值有一个下界$-\beta$。

沿着$-c$（法向量）的方向走，目标函数$\symbfit{-c^Tx}$的值越来越大，对应地，沿着$c$（法向量）的方向走，$\symbfit{-c^Tx}$的值越来越小，$\symbfit{c^Tx}$的值越来越大，因此$\symbfit{c^Tx}$的最小值最小只可能是$-\beta$（正好位于平面$\symbfit{c^Tx=-\beta}$）。因此，如果可行域与平面相交，那么最值在交点（或线或平面）处取得。

这也解释了为什么Graphical Method，要求先画出可行区域，之后沿着一个方向（目标函数法向量）移动目标函数的曲线，直到找到与可行域的最后一个交点。

```{python echo=FALSE, results = "hide"}
coord = [[1,1], [2,1], [2,2], [1,2], [0.5,1.5]]
coord = [[1,1], [2,1], [2,2], [1,2], [0.5,1.5]]
coord.append(coord[0]) #repeat the first point to create a 'closed loop'

xs, ys = zip(*coord) #create lists of x and y values
x = np.arange(1.6,2.5,0.1)
y = -x + 4
soa = np.array([[2, 2, 2.1, 2.1]])
X, Y, U, V = zip(*soa)
fig, ax = plt.subplots()
plt.xlim(0.4, 2.7)
plt.ylim(0.8, 2.6)
plt.quiver(X, Y, U, V, scale=5, scale_units='inches', angles = 'xy', color=['red'])
plt.gca().set_aspect('equal', adjustable='box')
plt.plot(xs,ys) 
plt.plot(x, y)
plt.scatter(2,2,zorder=10)
plt.annotate(r"$\bm{x^{\ast}}$", (2.1,1.95))
plt.annotate(r"$-\bm{c^Tx=\beta}$", (2.3,1.5))
plt.annotate(r"$-\bm{c}$", (2.25,2.25))
plt.annotate(r"$P$", (1.25,1.5))
plt.show()
```

Graphical Method：遍历每一个可行域Polyhedral的交点，根据目标函数得到$-c$的方向，画出对应垂直的平面$\symbfit{-c^Tx=\beta}$，看可行域是否完全位于该平面的下半空间，若找到则最优解也找到，否则继续遍历。

# Simplex Method
有效生成和管理可行域交点的方式

